#Download nodejs(https://www.youtube.com/watch?v=VR6lMnD-X70  or other)

#CMD(in the project folder):

npm init
->(Give names)(change index.js to server.js[just remember,not mandatory])

npm i express ejs express-ejs-layouts
->installs dependency packages like express,ejs(embeded js) and express-ejs-layouts

npm i --save-dev nodemon
->saves as development project and Nodemon is a utility that will monitor for any changes in your source and automatically restart the server

#package.json(existing already):

replace the content of scripts:[] as:
"start":"node server.js",    //Start the server without nodemon
"devStart":"nodemon server.js"   //Start the serer and refresh everytime changes are made(npm run devStart for tests) 

#server.js(create):

const express=require('express') //load the express package(require() is used to load modules in js)
const app=express()
const expressLayouts=require('express-ejs-layouts')

app.set('view engine','ejs') //set the view engine as ejs
app.set('views',__dirname+'/views') //current folder+views folder
app.set('layout','layouts/layout')
app.use(expressLayouts)
app.use(express.static('public')) #public files like index.html,style.css etc in public folder

app.listen(process.env.PORT || 3000) // Run At http://localhost:3000/

//Test the above with 'npm run devStart' and open 'http://localhost:3000/' in the browser(Dont close/interept both the cmd and browser,nodemon refreshes the changes in cmd.We need to refresh the browser only)
//Cannot GET / is the output in the browser

#Create 4 folders public,routes,views,models

#Create index.js in router://All the routes
const express=required('express')
const router=express.Router()

router.get('/',(req,res))=>{
	res.send('Hello world')          //Prints hello world in the browser
})  //first parameter:localhost.2nd parameter is a function with 2 parameters:requests and response


#In the server.js,add//Connect server.js and index.js
const indexRouter=require('./routes/index') //in the beginning with all te require()
app.use('/',indexRouter) //with all the app.use()

#in the index.js://Tell to export the router in index.js
module.exports=router//At the end


#create a layouts folder in views folder and create layout.ejs in it(Because app.set('layout','layouts/layout')):
//press !,and then enter to get a baasic html page
//ADD in body:
    Before
    <br>
    <%- body %>         //This means ,it imports all the text from specified(in index.js of routes folder in res.render('filename') instead of res.send('text')) filename's body
    <br>
    After

#create a index.ejs in views file:Add
Middle

#Change res.send('text') to ://In index.js of routes folder
res.render('index') //index with extension of ejs

#So we get the output in the browser:
Before
Middle
After

#install mangoDB:
npm i mongoose

#SETTING UP A DATABASE:Download mongodb from https://www.youtube.com/watch?v=wcx3f0eUiAw
#in server.js:
const mongoose=require('mongoose')//With all the requires

//At the end before the last line
mongoose.connect(process.env.DATABASE_URL,{ //Link for the db
useNewUrlParser:true})
const db=mongoose.connection
db.on('error',error=>console.error(error)) //Display error everytime if any error on the console
db.once('open',()=>console.log('Connected to mongoose')) //Display the text 'Connected to mongoose' once on opening it

#To create DATABASE_URL use:npm i --save-dev dotenv //--save-dev bcz its needed to be installed only for our local current project

#Create a file named .env in the main folder:
DATABASE_URL=mongodb://localhost/test

#In the very top of server.js://Check for the evironment:production or development
if(process.env.NODE_ENV!=='production'){
	require('dotenv').parse() //connect the .env file
}

#Set github:
git init

#create a .gitignore and add files not to add to github(.env(private user info) and node_modules(large file with all dependencies))

git add .

git commit -m "Initial Setup"

#Create a new repo in the github website

git remote add origin URL(copy from the repo)

git push -u origin master

